<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="using:l4d2addon_installer.ViewModels"
             mc:Ignorable="d" d:DesignWidth="500" d:DesignHeight="150"
             x:Class="l4d2addon_installer.Views.LogsPanelView"
             x:DataType="vm:LogsPanelViewModel">

    <Design.DataContext>
        <vm:LogsPanelViewModel />
    </Design.DataContext>

    <UserControl.Resources>
        <MenuFlyout x:Key="SelectableTextBlockContextFlyout" Placement="Bottom">
            <MenuItem Header="复制" Command="{Binding $parent[SelectableTextBlock].Copy}"
                      IsEnabled="{Binding $parent[SelectableTextBlock].CanCopy}"
                      InputGesture="{x:Static TextBox.CopyGesture}" />
        </MenuFlyout>
    </UserControl.Resources>

    <UserControl.Styles>
        <Style Selector="Border.logs">
            <Setter Property="Background" Value="#f9f9f9" />
            <Setter Property="Padding" Value="5,0,0,0" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="#dcdfe6" />

            <Style Selector="^ TextBlock">
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontFamily" Value="serif, sans-serif" />
                <Style Selector="^.time">
                    <Setter Property="FontSize" Value="12" />
                    <Setter Property="Foreground" Value="#808080c2" />
                </Style>
            </Style>

            <Style Selector="^ SelectableTextBlock">
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontFamily" Value="serif, sans-serif" />
                <Setter Property="SelectionForegroundBrush" Value="White" />
                <Style Selector="^.message">
                    <Setter Property="FontSize" Value="13.5" />
                    <Setter Property="Foreground" Value="#95000000" />
                </Style>
                <Style Selector="^.error">
                    <Setter Property="FontSize" Value="13.5" />
                    <Setter Property="Foreground" Value="#fe6666" />
                </Style>
            </Style>
        </Style>

        <Style Selector="SelectableTextBlock">
            <Style Selector="^ MenuFlyoutPresenter">
                <Setter Property="CornerRadius" Value="10" />
                <Setter Property="FontSize" Value="13.5" />
                <Setter Property="FontFamily" Value="serif, sans-serif" />
                <Style Selector="^ /template/ Border#LayoutRoot">
                    <Setter Property="Margin" Value="5" />
                    <Setter Property="BoxShadow" Value="0 0 10 0 #25000000" />
                </Style>
            </Style>

            <Style Selector="^[IsEnabled=True]">
                <Setter Property="Cursor" Value="IBeam" />
                <Setter Property="ContextFlyout" Value="{StaticResource SelectableTextBlockContextFlyout}" />
            </Style>
        </Style>
    </UserControl.Styles>

    <Border Classes="logs">
        <ScrollViewer Classes="scrollbar" x:Name="LogScrollViewer">
            <StackPanel>
                <ItemsControl ItemsSource="{Binding Logs}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <DockPanel>
                                <TextBlock Classes="time" DockPanel.Dock="Left" Text="{Binding Time,Mode=OneTime}" />
                                <Panel Margin="0,0,10,0" DockPanel.Dock="Left" />
                                <SelectableTextBlock Text="{Binding Message,Mode=OneTime}"
                                                     Classes.message="{Binding IsMessage,Mode=OneTime}"
                                                     Classes.error="{Binding !IsMessage,Mode=OneTime}" />
                            </DockPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>
        </ScrollViewer>
    </Border>
</UserControl>